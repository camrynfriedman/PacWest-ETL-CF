{
	"name": "load_to_landing_table",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OG_Data",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from OG_Data\n"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Landing_Table",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Export data to Landing_Table"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          {project code} as string,",
				"          {pq #} as string,",
				"          {po / so #} as string,",
				"          {asn/dn #} as string,",
				"          country as string,",
				"          {managed by} as string,",
				"          {fulfill via} as string,",
				"          {vendor inco term} as string,",
				"          {shipment mode} as string,",
				"          {pq first sent to client date} as string,",
				"          {po sent to vendor date} as string,",
				"          {scheduled delivery date} as string,",
				"          {delivered to client date} as string,",
				"          {delivery recorded date} as string,",
				"          {product group} as string,",
				"          {sub classification} as string,",
				"          vendor as string,",
				"          {item description} as string,",
				"          {molecule/test type} as string,",
				"          brand as string,",
				"          dosage as string,",
				"          {dosage form} as string,",
				"          {unit of measure (per pack)} as short,",
				"          {line item quantity} as integer,",
				"          {line item value} as double,",
				"          {pack price} as double,",
				"          {unit price} as double,",
				"          {manufacturing site} as string,",
				"          {first line designation} as boolean,",
				"          {weight (kilograms)} as string,",
				"          {freight cost (usd)} as string,",
				"          {line item insurance (usd)} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          project_code as string,",
				"          pq_num as string,",
				"          po_so_num as string,",
				"          asn_dn_num as string,",
				"          country as string,",
				"          managed_by as string,",
				"          fulfill_via as string,",
				"          vendor_inco_term as string,",
				"          shipment_mode as string,",
				"          pq_to_client_date as string,",
				"          po_to_vendor_date as string,",
				"          sched_delivery_date as timestamp,",
				"          actual_delivery_date as timestamp,",
				"          delivery_recorded_date as timestamp,",
				"          product_group as string,",
				"          sub_classification as string,",
				"          vendor as string,",
				"          item_description as string,",
				"          molecule_test_type as string,",
				"          brand as string,",
				"          dosage as string,",
				"          dosage_form as string,",
				"          unit_of_measure as integer,",
				"          line_item_qty as integer,",
				"          line_item_val as double,",
				"          pack_price as double,",
				"          unit_price as double,",
				"          manufacturing_site as string,",
				"          first_line_designation as boolean,",
				"          weight_kg as string,",
				"          freight_cost as string,",
				"          line_item_insurance as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          country,",
				"          vendor,",
				"          brand,",
				"          dosage",
				"     )) ~> sink1"
			]
		}
	}
}